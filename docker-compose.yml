version: '3.3'

services:
  db:
    image: mysql:5.7.34
    platform: linux/x86_64
    container_name: mysql
    command: "--default-authentication-plugin=mysql_native_password"
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: symfony
      MYSQL_USER: symfony
      MYSQL_PASSWORD: symfony
      MYSQL_ROOT_PASSWORD: symfony
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./docker/mysql/data:/var/lib/mysql/
      - ./docker/mysql/conf/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network
  app:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    image: php:8.1-fpm-buster
    container_name: php
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  webserver:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

###> doctrine/doctrine-bundle ###
  # database:
  #   image: postgres:${POSTGRES_VERSION:-15}-alpine
  #   environment:
  #     POSTGRES_DB: ${POSTGRES_DB:-app}
  #     # You should definitely change the password in production
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
  #     POSTGRES_USER: ${POSTGRES_USER:-app}
  #   volumes:
  #     - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###
networks:
  app-network:
    driver: bridge
# volumes:
# ###> doctrine/doctrine-bundle ###
#   database_data:
###< doctrine/doctrine-bundle ###
